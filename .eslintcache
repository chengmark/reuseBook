[{"E:\\repositories\\csci3100-project\\src\\index.tsx":"1","E:\\repositories\\csci3100-project\\src\\hot-routes.tsx":"2","E:\\repositories\\csci3100-project\\src\\routes.tsx":"3","E:\\repositories\\csci3100-project\\src\\layout.tsx":"4","E:\\repositories\\csci3100-project\\src\\styling.tsx":"5","E:\\repositories\\csci3100-project\\src\\views\\appView\\index.tsx":"6","E:\\repositories\\csci3100-project\\src\\views\\searchView\\index.tsx":"7","E:\\repositories\\csci3100-project\\src\\views\\profileView\\index.tsx":"8","E:\\repositories\\csci3100-project\\src\\views\\cartView\\index.tsx":"9","E:\\repositories\\csci3100-project\\src\\views\\settingsView\\index.tsx":"10","E:\\repositories\\csci3100-project\\src\\views\\loginView\\index.tsx":"11","E:\\repositories\\csci3100-project\\src\\components\\navigation\\index.tsx":"12","E:\\repositories\\csci3100-project\\src\\views\\profileView\\style.tsx":"13","E:\\repositories\\csci3100-project\\src\\views\\loginView\\style.tsx":"14","E:\\repositories\\csci3100-project\\src\\components\\navigation\\style.tsx":"15","E:\\repositories\\csci3100-project\\src\\views\\loginView\\loginForm\\index.tsx":"16","E:\\repositories\\csci3100-project\\src\\views\\loginView\\signupForm\\index.tsx":"17","E:\\repositories\\csci3100-project\\src\\views\\loginView\\resetPwForm\\index.tsx":"18","E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\index.tsx":"19","E:\\repositories\\csci3100-project\\src\\formIntegrity.tsx":"20","E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\style.tsx":"21","E:\\repositories\\csci3100-project\\src\\components\\tooltip\\index.tsx":"22","E:\\repositories\\csci3100-project\\src\\views\\homeView\\index.tsx":"23","E:\\repositories\\csci3100-project\\src\\views\\homeView\\header\\index.tsx":"24","E:\\repositories\\csci3100-project\\src\\views\\homeView\\content\\index.tsx":"25","E:\\repositories\\csci3100-project\\src\\components\\searchBar\\index.tsx":"26","E:\\repositories\\csci3100-project\\src\\components\\searchBar\\style.tsx":"27","E:\\repositories\\csci3100-project\\src\\views\\homeView\\style.tsx":"28","E:\\repositories\\csci3100-project\\src\\views\\profileView\\interestCard\\index.tsx":"29","E:\\repositories\\csci3100-project\\src\\views\\profileView\\infoCard\\index.tsx":"30","E:\\repositories\\csci3100-project\\src\\views\\profileView\\mainCard\\index.tsx":"31","E:\\repositories\\csci3100-project\\src\\views\\profileView\\mainCard\\saleTab.tsx":"32"},{"size":494,"mtime":1612641907876,"results":"33","hashOfConfig":"34"},{"size":160,"mtime":1610301564212,"results":"35","hashOfConfig":"34"},{"size":2357,"mtime":1615473517860,"results":"36","hashOfConfig":"34"},{"size":2468,"mtime":1615473517787,"results":"37","hashOfConfig":"34"},{"size":1268,"mtime":1615540249095,"results":"38","hashOfConfig":"34"},{"size":302,"mtime":1615473517937,"results":"39","hashOfConfig":"34"},{"size":250,"mtime":1615473518803,"results":"40","hashOfConfig":"34"},{"size":1102,"mtime":1615473518608,"results":"41","hashOfConfig":"34"},{"size":246,"mtime":1615473517983,"results":"42","hashOfConfig":"34"},{"size":254,"mtime":1615473518822,"results":"43","hashOfConfig":"34"},{"size":1037,"mtime":1615473518204,"results":"44","hashOfConfig":"34"},{"size":2009,"mtime":1615473517217,"results":"45","hashOfConfig":"34"},{"size":4011,"mtime":1615483053092,"results":"46","hashOfConfig":"34"},{"size":2070,"mtime":1615473518550,"results":"47","hashOfConfig":"34"},{"size":1353,"mtime":1615473517418,"results":"48","hashOfConfig":"34"},{"size":2763,"mtime":1615473518295,"results":"49","hashOfConfig":"34"},{"size":3247,"mtime":1615473518456,"results":"50","hashOfConfig":"34"},{"size":1923,"mtime":1615473518361,"results":"51","hashOfConfig":"34"},{"size":963,"mtime":1615473517249,"results":"52","hashOfConfig":"34"},{"size":1906,"mtime":1615545918783,"results":"53","hashOfConfig":"34"},{"size":1431,"mtime":1615473517333,"results":"54","hashOfConfig":"34"},{"size":1236,"mtime":1615473517651,"results":"55","hashOfConfig":"34"},{"size":394,"mtime":1615473518071,"results":"56","hashOfConfig":"34"},{"size":381,"mtime":1615473518053,"results":"57","hashOfConfig":"34"},{"size":802,"mtime":1615473518035,"results":"58","hashOfConfig":"34"},{"size":1780,"mtime":1615473517501,"results":"59","hashOfConfig":"34"},{"size":581,"mtime":1615473517582,"results":"60","hashOfConfig":"34"},{"size":900,"mtime":1615473518121,"results":"61","hashOfConfig":"34"},{"size":901,"mtime":1615473518702,"results":"62","hashOfConfig":"34"},{"size":1176,"mtime":1615481987025,"results":"63","hashOfConfig":"34"},{"size":1115,"mtime":1615481481039,"results":"64","hashOfConfig":"34"},{"size":2879,"mtime":1615912141067,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"glrecs",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\repositories\\csci3100-project\\src\\index.tsx",[],[],"E:\\repositories\\csci3100-project\\src\\hot-routes.tsx",[],"E:\\repositories\\csci3100-project\\src\\routes.tsx",[],"E:\\repositories\\csci3100-project\\src\\layout.tsx",["145"],"import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { COLOR } from './styling'\n\nexport const NAV_WIDTH = 72\nexport const NAV_EXPANDED_WIDTH = 256\n\nexport const MIN_MAIN_COLUMN_WIDTH = 480\nexport const MAX_MAIN_COLUMN_WIDTH = 580\n\nexport const MAX_APP_COLUMN_WIDTH = 260 // for app view\n\nexport const SEARCH_BAR_HEIGHT = 62\nexport const FOOTER_HEIGHT = 100\n\nexport const MEDIA_BREAK = MIN_MAIN_COLUMN_WIDTH + NAV_WIDTH * 2 // 572px\n\ntype Props = {\n  children: Array<ReactElement>\n}\n\nexport const AppLayout = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: ${NAV_WIDTH}px 1fr;\n  grid-template-areas: 'navigation main';\n  background: ${COLOR.bg.grey};\n  @media (max-width: ${MEDIA_BREAK}px) {\n    height: 100%;\n    grid-template-columns: none;\n    grid-template-rows: auto ${NAV_WIDTH}px;\n    grid-template-areas: 'main' 'navigation';\n  }\n`\n\n/* navbar on left, main view on right (desktop version)\n┌──┬───────────┐\n│xx│     xx    │\n│  │           │\n│xx│     xx    │\n│  │           │\n│xx│     xx    │\n└──┴───────────┘\n*/\n\n/* navbar on bottom, main view on top (mobile version)\n┌──────────────┐\n│      xx      │\n│      xx      │\n│      xx      │\n│      xx      │\n│──────────────│\n└──────────────┘\n*/\n\nexport const MainLayout = styled.div`\n  display: grid;\n  grid-area: main;\n  height: 100%;\n  max-height: 100vh;\n  overflow: hidden;\n  overflow-y: auto;\n  padding-top: 12px;\n`\n\n/*\n┌──────────────┐\n│      xx      │\n│              │\n│      xx      │\n│              │\n│      xx      │\n└──────────────┘\n*/\n\nexport const CenteredLayout = styled.div`\n  display: grid;\n  place-self: center;\n  max-width: ${MAX_MAIN_COLUMN_WIDTH}px;\n  grid-template-columns: minmax(${MIN_MAIN_COLUMN_WIDTH}px, ${MAX_MAIN_COLUMN_WIDTH}px);\n  @media (max-width: ${MEDIA_BREAK}px) {\n    max-width: ${MAX_APP_COLUMN_WIDTH}px;\n    grid-template-columns: ${MAX_APP_COLUMN_WIDTH}px;\n  }\n`\n\n/*\n┌─────────────┐\n│             │\n│    ┌───┐    │\n│    │ x │    │\n│    └───┘    │\n│             │\n└─────────────┘\n*/\n// reference spectrum/src/component/layout/index.js\n","E:\\repositories\\csci3100-project\\src\\styling.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\appView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\searchView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\profileView\\index.tsx",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import { Avatar, Button, Chip } from '@material-ui/core'\nimport { Info, LockOpen } from '@material-ui/icons'\nimport React, { ReactElement } from 'react'\nimport InfoCard from './infoCard'\nimport InterestCard from './interestCard'\nimport MainCard from './mainCard'\nimport {\n  Card,\n  AvatarWrapper,\n  MainColumn,\n  ProfileLayout,\n  SecondaryColumn,\n  CoverPhoto,\n  useStyles,\n  Name,\n  Block,\n  Username,\n  Divider,\n  InterestTitle,\n  InterestContainer,\n} from './style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst testUser = {\n  username: 'TestUser',\n  firstName: 'Test',\n  lastName: 'User',\n  interests: ['Math', 'Philosophy', 'Movie', 'Travel', 'Scocial Science'],\n}\n\nconst ProfileView = (props: Props): ReactElement => {\n  const { children, ...rest } = props\n  const classes = useStyles()\n  return (\n    <ProfileLayout>\n      <SecondaryColumn>\n        <InfoCard user={testUser}></InfoCard>\n        <InterestCard user={testUser}></InterestCard>\n      </SecondaryColumn>\n      <MainColumn>\n        <MainCard></MainCard>\n      </MainColumn>\n    </ProfileLayout>\n  )\n}\n\nexport default ProfileView\n","E:\\repositories\\csci3100-project\\src\\views\\cartView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\settingsView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\loginView\\index.tsx",["163","164","165"],"import { CenteredLayout } from '@src/layout'\nimport React, { ReactElement, useState } from 'react'\nimport LoginForm from './loginForm'\nimport ResetPwForm from './resetPwForm'\nimport SignupForm from './signupForm'\nimport { Container, Wrapper, LinkText } from './style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nexport const LOGIN = 1\nexport const SIGNUP = 2\nexport const RESET_PW = 3\n\nconst LoginView = (props: Props): ReactElement => {\n  const { children } = props\n  const [operation, setOperation] = useState(LOGIN)\n\n  return (\n    <CenteredLayout>\n      {operation === LOGIN && (\n        <Wrapper>\n          <LoginForm setOperation={setOperation}></LoginForm>\n        </Wrapper>\n      )}\n      {operation === SIGNUP && (\n        <Wrapper>\n          <SignupForm setOperation={setOperation}></SignupForm>\n        </Wrapper>\n      )}\n      {operation === RESET_PW && (\n        <Wrapper>\n          <ResetPwForm setOperation={setOperation}></ResetPwForm>\n        </Wrapper>\n      )}\n    </CenteredLayout>\n  )\n}\n\nexport default LoginView\n","E:\\repositories\\csci3100-project\\src\\components\\navigation\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\profileView\\style.tsx",["166"],"import { makeStyles } from '@material-ui/core'\nimport { MEDIA_BREAK } from '@src/layout'\nimport { COLOR } from '@src/styling'\nimport styled from 'styled-components'\n\nconst SECOND_COLUMN_MIN_WIDTH = 380\nconst SECOND_COLUMN_MAX_WIDTH = 440\n\nexport const useStyles = makeStyles(() => ({\n  userAvatar: {\n    width: '96px',\n    height: '96px',\n    border: '2px solid white',\n    fontSize: '48px',\n  },\n  bookAvatar: {\n    width: '64px',\n    height: '64px',\n    margin: '5px',\n  },\n  button: {\n    margin: '5px 10px 5px 10px',\n    background: COLOR.primary.shade1,\n    color: COLOR.primary.tint1,\n    '&:hover': {\n      background: COLOR.primary.shade2,\n    },\n  },\n  chip: {\n    background: COLOR.primary.tint1,\n    color: COLOR.primary.shade1,\n    border: `1px solid ${COLOR.primary.shade1}`,\n    margin: '2.5px 5px 2.5px 5px',\n  },\n  forwardIcon: {\n    marginLeft: 'auto',\n    color: COLOR.font.grey,\n  },\n}))\n\ntype Props = {\n  coverPhoto?: string // path of the cover photo\n}\n\nexport const ProfileLayout = styled.div`\n  display: grid;\n  width: calc(100% - 48px);\n  grid-gap: 24px;\n  padding: 0 24px 0 24px;\n  grid-template-columns: minmax(${SECOND_COLUMN_MIN_WIDTH}px, ${SECOND_COLUMN_MAX_WIDTH}px) 1fr;\n  grid-template-areas: 'secondary main';\n`\n\n/* second col on left, main col on right (desktop version)\n┌──┬───────────┐\n│xx│     xx    │\n│  │           │\n│xx│     xx    │\n│  │           │\n│xx│     xx    │\n└──┴───────────┘\n*/\n\nexport const SecondaryColumn = styled.div`\n  grid-area: secondary;\n  display: flex;\n  flex-direction: column;\n`\nexport const MainColumn = styled.div`\n  grid-area: main;\n  display: flex;\n`\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: ${COLOR.bg.light};\n  border-radius: 5px;\n  border: 1px solid ${COLOR.divider.light};\n  margin-bottom: 15px;\n  width: 100%;\n`\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: -48px;\n`\n\nexport const CoverPhoto = styled.div`\n  ${(props: Props) => `\n    width: 100%;\n    height: 124px;\n    background: ${props.coverPhoto ?? COLOR.bg.dark}\n  `}\n`\n\nexport const Block = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n`\n\nexport const Name = styled.div`\n  font-weight: 800;\n  color: ${COLOR.font.dark};\n  font-size: 24px;\n`\n\nexport const Username = styled.div`\n  color: ${COLOR.font.grey};\n  font-size: 18px;\n`\n\nexport const Divider = styled.div`\n  width: 100%;\n  height: 2px;\n  background: ${COLOR.divider.light};\n  margin: 5px 0 5px 0;\n`\n\nexport const InterestTitle = styled.div`\n  font-weight: 700;\n  color: ${COLOR.font.dark};\n  font-size: 16px;\n`\n\nexport const InterestContainer = styled.div`\n  display: inline-block;\n`\n\ntype TabProps = {\n  currentTab: number\n  index: number\n}\n\nexport const TabPanel = styled.div`\n  ${(props: TabProps) => `\n    display: ${props.currentTab !== props.index ? 'none' : 'block'};\n    height: calc(100vh - 12px - 48px - 5px);\n    overflow-y: auto;\n  `}\n`\n\nexport const Tile = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 2.5px 5px 2.5px 5px;\n  border-bottom: 1px solid ${COLOR.divider.dark};\n  background: ${COLOR.bg.light};\n  transition: 0.2s;\n  &: hover {\n    background: ${COLOR.hover.grey};\n  }\n`\n\nexport const TileInfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const TileTitle = styled.div`\n  font-weight: 700;\n  color: ${COLOR.font.dark};\n  font-size: 18px;\n`\n\nexport const TileDetails = styled.div`\n  display: flex;\n  flex-direction: row;\n  & > * {\n    margin: 10px;\n  }\n`\nexport const IconWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  & > * {\n    margin: 0 2px 0 2px;\n  }\n`\n\nexport const CenteredTabPanel = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`\n","E:\\repositories\\csci3100-project\\src\\views\\loginView\\style.tsx",["167"],"import { makeStyles } from '@material-ui/core'\nimport { MEDIA_BREAK } from '@src/layout'\nimport { COLOR } from '@src/styling'\nimport styled, { keyframes } from 'styled-components'\n\nexport const useStyles = makeStyles((theme) => ({\n  textField: {\n    margin: '10px 0px 10px 0px',\n    width: 'fill-available',\n    '& .MuiOutlinedInput-root': {\n      '&.Mui-focused fieldset': {\n        borderColor: COLOR.primary.shade1,\n      },\n      '&.Mui-error fieldset': {\n        borderColor: COLOR.error.shade,\n      },\n    },\n  },\n  button: {\n    width: 'fill-available',\n    margin: '10px 0px 10px 0px',\n    background: COLOR.primary.shade1,\n    '&:hover': {\n      background: COLOR.primary.shade2,\n    },\n  },\n}))\n\nconst fadeIn = keyframes`\n  from {\n    margin-top:300px;\n    opacity: 0.1;\n  }\n\n  to {\n    margin-top:0px;\n    opacity: 1;\n  }\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  animation: ${fadeIn} 0.3s linear;\n`\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${COLOR.bg.light};\n  border: 1px solid ${COLOR.divider.dark};\n  padding: 35px;\n  margin: 10px 0px 10px 0px;\n  width: 100%;\n  @media (max-width: ${MEDIA_BREAK}px) {\n    padding: 15px;\n  }\n`\n\nexport const IconRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-size: 64px;\n  color: ${COLOR.primary.shade1};\n  width: 100%;\n`\nexport const Line = styled.div`\n  flex: 2;\n  height: 1px;\n  background: ${COLOR.divider.dark};\n`\n\nexport const CenteredRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin: 25px 0px 25px 0px;\n`\n\nexport const DividerText = styled.div`\n  color: ${COLOR.divider.dark};\n  margin: 0px 15px 0px 15px;\n`\nexport const LinkText = styled.div`\n  cursor: pointer;\n  font-weight: 600;\n  color: ${COLOR.primary.main};\n  &:hover {\n    color: ${COLOR.primary.shade2};\n  }\n`\n","E:\\repositories\\csci3100-project\\src\\components\\navigation\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\loginView\\loginForm\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\loginView\\signupForm\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\loginView\\resetPwForm\\index.tsx",["168"],"import React, { ChangeEvent, Dispatch, ReactElement, SetStateAction, useState } from 'react'\nimport { AccountCircle } from '@material-ui/icons'\nimport { Button, TextField } from '@material-ui/core'\nimport { LOGIN } from '..'\nimport { Container, IconRow, Line, CenteredRow, LinkText, useStyles } from '../style'\nimport { checkIntegrity, VALIDATORS } from '@src/formIntegrity'\n\ntype Props = {\n  setOperation: Dispatch<SetStateAction<number>>\n}\n\nconst ResetPwForm = (props: Props): ReactElement => {\n  const { setOperation } = props\n  const classes = useStyles()\n  const [input, setInput] = useState({\n    email: { value: '', errMsg: '' },\n  })\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const nextState = input\n    nextState[e.target.name as keyof typeof input] = { value: e.target.value, errMsg: '' }\n    setInput({ ...nextState })\n  }\n\n  const handleSubmit = () => {\n    // integrity check\n    const email = checkIntegrity(input.email, [VALIDATORS.REQUIRED, VALIDATORS.EMAIL])\n    setInput({ ...input, email })\n  }\n\n  return (\n    <>\n      <Container>\n        <IconRow>\n          <Line></Line>\n          <AccountCircle fontSize=\"inherit\" color=\"inherit\"></AccountCircle>\n          <Line></Line>\n        </IconRow>\n        <TextField\n          id=\"email-input\"\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          autoComplete=\"current-email\"\n          variant=\"outlined\"\n          className={classes.textField}\n          error={!!input.email.errMsg}\n          helperText={input.email.errMsg}\n          onChange={handleInputChange}\n        />\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmit}>\n          RESET PASSWORD\n        </Button>\n      </Container>\n      <Container>\n        <LinkText onClick={() => setOperation(LOGIN)}>Back to log in.</LinkText>\n      </Container>\n    </>\n  )\n}\n\nexport default ResetPwForm\n","E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\formIntegrity.tsx",["169"],"import { Obj } from '@myTypes/Obj'\n\ntype Validator = {\n  id: number\n  errMsg: string\n  check: (target: string) => boolean\n}\n\ntype Target = {\n  value: string\n  errMsg: string\n}\n\nconst REQUIRED: Validator = {\n  id: 1,\n  errMsg: 'This field cannot be empty.',\n  check: (target: string): boolean => {\n    return target.length !== 0\n  },\n}\n\nconst EMAIL: Validator = {\n  id: 2,\n  errMsg: 'Please enter a valid email.',\n  check: (target: string): boolean => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return regex.test(String(target).toLowerCase())\n  },\n}\n\nconst NUM_AND_LETTER: Validator = {\n  id: 3,\n  errMsg: 'Mixture of number and letter is required.',\n  check: (target: string): boolean => {\n    const regex = /^[0-9a-zA-Z]+$/\n    return regex.test(target)\n  },\n}\n\nconst SPECIAL_CHAR: Validator = {\n  id: 4,\n  errMsg: 'Inclusion of special character, e.g. ! @ # ? ] is required.',\n  check: (target: string): boolean => {\n    const regex = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n    return regex.test(target)\n  },\n}\nconst LENGTH_EIGHT: Validator = {\n  id: 5,\n  errMsg: 'At least 8 characters required.',\n  check: (target: string): boolean => {\n    return target.length > 7\n  },\n}\n\n// check whether the target passes the integrity test\n// @return original Target if passes all validators\n// @return modified errMsg if fails 1 validator\nexport const checkIntegrity = (target: Target, validators: Array<Validator>): Target => {\n  validators.some((validator) => {\n    if (!validator.check(target.value)) return (target.errMsg = validator.errMsg)\n  })\n  return target\n}\n\nexport const VALIDATORS = {\n  REQUIRED,\n  EMAIL,\n  NUM_AND_LETTER,\n  SPECIAL_CHAR,\n  LENGTH_EIGHT,\n}\n\n/**\n * Usage:\n * const email = checkIntegrity(input.email, [VALIDATORS.REQUIRED, VALIDATORS.EMAIL])\n */\n","E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\tooltip\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\homeView\\index.tsx",["170"],"import React, { ReactElement } from 'react'\nimport Content from './content'\nimport Header from './header'\nimport { HomeLayout } from './style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst HomeView = (props: Props): ReactElement => {\n  const { ...rest } = props\n  return (\n    <HomeLayout>\n      <Header></Header>\n      <Content></Content>\n    </HomeLayout>\n  )\n}\n\nexport default HomeView\n","E:\\repositories\\csci3100-project\\src\\views\\homeView\\header\\index.tsx",["171"],"import SearchBar from '@src/components/searchBar'\nimport React, { ReactElement } from 'react'\nimport { HeaderContainer } from '../style'\n\ntype Props = {\n  // children?: ReactElement\n}\n\nconst Header = (props: Props): ReactElement => {\n  // const { children } = props\n  return (\n    <HeaderContainer>\n      <SearchBar></SearchBar>\n    </HeaderContainer>\n  )\n}\n\nexport default Header\n","E:\\repositories\\csci3100-project\\src\\views\\homeView\\content\\index.tsx",["172","173","174","175","176","177"],"import { GridList, GridListTile } from '@material-ui/core'\nimport React, { ReactElement, useState } from 'react'\nimport { ScrollableList, ContentContainer, useStyles, Tag } from '../style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst MainContent = (props: Props): ReactElement => {\n  const { children, ...rest } = props\n  const classes = useStyles()\n  const [categories, setCategories] = useState([\n    'Math',\n    'Computer',\n    'Travel',\n    'English',\n    'Chinese',\n    'UGFH',\n    'UGFN',\n    'Novel',\n    'Sci-fi',\n    'Science',\n    'History',\n  ])\n\n  return (\n    <ContentContainer>\n      <ScrollableList>\n        {categories.map((category) => (\n          <Tag key={category}>{category}</Tag>\n        ))}\n      </ScrollableList>\n    </ContentContainer>\n  )\n}\n\nexport default MainContent\n","E:\\repositories\\csci3100-project\\src\\components\\searchBar\\index.tsx",["178","179","180"],"import { makeStyles } from '@material-ui/core'\nimport React, { ChangeEvent, ReactElement, useState } from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Input, SearchWrapper, Submit, Select } from './style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid white',\n  },\n  focusedForm: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid orange',\n  },\n  select: {\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}))\n\nconst SearchBar = (props: Props): ReactElement => {\n  const [input, setInput] = useState('')\n  const [scope, setScope] = useState('All')\n  const [isFocus, setIsFocus] = useState(false)\n  const { ...rest } = props\n  const classes = useStyles()\n\n  const handleScopeChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setScope(e.target.value)\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value)\n  }\n\n  const toggleFocus = () => {\n    setIsFocus(!isFocus)\n  }\n\n  return (\n    <SearchWrapper>\n      <Select name=\"scope\" value={scope} onChange={(e) => handleScopeChange(e as ChangeEvent<HTMLSelectElement>)}>\n        <option value=\"ALL\">All</option>\n        <option value=\"Name\">Name</option>\n        <option value=\"Author\">Author</option>\n      </Select>\n      <Input value={input} onChange={handleInputChange}></Input>\n      <Submit>\n        <SearchIcon></SearchIcon>\n      </Submit>\n    </SearchWrapper>\n  )\n}\n\nexport default SearchBar\n","E:\\repositories\\csci3100-project\\src\\components\\searchBar\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\homeView\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\profileView\\interestCard\\index.tsx",["181","182","183","184"],"import { Obj } from '@myTypes/Obj'\nimport { Chip } from '@material-ui/core'\nimport React, { ReactElement } from 'react'\nimport { Card, Block, InterestTitle, Divider, InterestContainer, useStyles } from '../style'\n\ntype Props = {\n  user: any // should change to specific user type, define in common types later\n}\n\nconst InterestCard = (props: Props): ReactElement => {\n  const { user, ...rest } = props\n  const classes = useStyles()\n\n  return (\n    <Card>\n      <Block>\n        <InterestTitle>Interests</InterestTitle>\n        <Divider></Divider>\n        <InterestContainer>\n          {user.interests.map((\n            interest: any, // should change any to string when user type is defined later\n          ) => (\n            <Chip key={interest} className={classes.chip} label={interest}></Chip>\n          ))}\n        </InterestContainer>\n      </Block>\n    </Card>\n  )\n}\n\nexport default InterestCard\n","E:\\repositories\\csci3100-project\\src\\views\\profileView\\infoCard\\index.tsx",["185","186"],"import { Avatar, Button } from '@material-ui/core'\nimport { Info, LockOpen } from '@material-ui/icons'\nimport React, { ReactElement } from 'react'\nimport { Card, CoverPhoto, AvatarWrapper, Block, Name, Username, Divider, useStyles } from '../style'\n\ntype Props = {\n  user: any // should change to specific user type, define in common types later\n}\n\nconst InfoCard = (props: Props): ReactElement => {\n  const { user, ...rest } = props\n  const classes = useStyles()\n\n  return (\n    <Card>\n      <CoverPhoto></CoverPhoto>\n      <AvatarWrapper>\n        <Avatar className={classes.userAvatar}>{user.username.substr(0, 1)[0]}</Avatar>\n      </AvatarWrapper>\n      <Block>\n        <Name>{user.firstName + ' ' + user.lastName}</Name>\n        <Username>{'@' + user.username}</Username>\n      </Block>\n      <Block>\n        <Divider></Divider>\n        <Button className={classes.button} size=\"small\" variant=\"contained\" startIcon={<LockOpen />}>\n          Change password\n        </Button>\n        <Button className={classes.button} size=\"small\" variant=\"contained\" startIcon={<Info />}>\n          Update Info\n        </Button>\n      </Block>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","E:\\repositories\\csci3100-project\\src\\views\\profileView\\mainCard\\index.tsx",["187","188","189"],"import { Obj } from '@myTypes/Obj'\nimport { Tab, Tabs } from '@material-ui/core'\nimport React, { ChangeEvent, ReactElement, useState } from 'react'\nimport { Card, TabPanel } from '../style'\nimport { useStyles } from '@src/views/profileView/style'\nimport SaleTab from './saleTab'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst MainCard = (props: Props): ReactElement => {\n  const { children, ...rest } = props\n  const [currentTab, setCurrentTab] = useState(0)\n  const classes = useStyles()\n\n  const handleTabChange = (e: ChangeEvent<Obj>, newTab: number) => {\n    setCurrentTab(newTab)\n  }\n\n  return (\n    <Card>\n      <Tabs value={currentTab} variant=\"fullWidth\" onChange={handleTabChange} indicatorColor=\"primary\" centered>\n        <Tab label=\"Sale\"></Tab>\n        <Tab label=\"Order\"></Tab>\n        <Tab label=\"History\"></Tab>\n      </Tabs>\n      <SaleTab currentTab={currentTab}></SaleTab>\n      <TabPanel currentTab={currentTab} index={1}>\n        Order tab\n      </TabPanel>\n      <TabPanel currentTab={currentTab} index={2}>\n        history tab\n      </TabPanel>\n    </Card>\n  )\n}\n\nexport default MainCard\n","E:\\repositories\\csci3100-project\\src\\views\\profileView\\mainCard\\saleTab.tsx",["190","191","192"],{"ruleId":"193","severity":1,"message":"194","line":18,"column":6,"nodeType":"195","messageId":"196","endLine":18,"endColumn":11},{"ruleId":"193","severity":1,"message":"197","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":16},{"ruleId":"193","severity":1,"message":"198","line":1,"column":18,"nodeType":"195","messageId":"196","endLine":1,"endColumn":24},{"ruleId":"193","severity":1,"message":"199","line":1,"column":26,"nodeType":"195","messageId":"196","endLine":1,"endColumn":30},{"ruleId":"193","severity":1,"message":"200","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"201","line":2,"column":16,"nodeType":"195","messageId":"196","endLine":2,"endColumn":24},{"ruleId":"193","severity":1,"message":"202","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":7},{"ruleId":"193","severity":1,"message":"203","line":9,"column":3,"nodeType":"195","messageId":"196","endLine":9,"endColumn":16},{"ruleId":"193","severity":1,"message":"204","line":13,"column":3,"nodeType":"195","messageId":"196","endLine":13,"endColumn":13},{"ruleId":"193","severity":1,"message":"205","line":15,"column":3,"nodeType":"195","messageId":"196","endLine":15,"endColumn":7},{"ruleId":"193","severity":1,"message":"206","line":16,"column":3,"nodeType":"195","messageId":"196","endLine":16,"endColumn":8},{"ruleId":"193","severity":1,"message":"207","line":17,"column":3,"nodeType":"195","messageId":"196","endLine":17,"endColumn":11},{"ruleId":"193","severity":1,"message":"208","line":18,"column":3,"nodeType":"195","messageId":"196","endLine":18,"endColumn":10},{"ruleId":"193","severity":1,"message":"209","line":19,"column":3,"nodeType":"195","messageId":"196","endLine":19,"endColumn":16},{"ruleId":"193","severity":1,"message":"210","line":20,"column":3,"nodeType":"195","messageId":"196","endLine":20,"endColumn":20},{"ruleId":"193","severity":1,"message":"211","line":35,"column":11,"nodeType":"195","messageId":"196","endLine":35,"endColumn":19},{"ruleId":"193","severity":1,"message":"212","line":35,"column":24,"nodeType":"195","messageId":"196","endLine":35,"endColumn":28},{"ruleId":"193","severity":1,"message":"213","line":36,"column":9,"nodeType":"195","messageId":"196","endLine":36,"endColumn":16},{"ruleId":"193","severity":1,"message":"214","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":19},{"ruleId":"193","severity":1,"message":"215","line":6,"column":30,"nodeType":"195","messageId":"196","endLine":6,"endColumn":38},{"ruleId":"193","severity":1,"message":"211","line":17,"column":11,"nodeType":"195","messageId":"196","endLine":17,"endColumn":19},{"ruleId":"193","severity":1,"message":"216","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"193","severity":1,"message":"217","line":6,"column":38,"nodeType":"195","messageId":"196","endLine":6,"endColumn":43},{"ruleId":"193","severity":1,"message":"218","line":5,"column":36,"nodeType":"195","messageId":"196","endLine":5,"endColumn":47},{"ruleId":"193","severity":1,"message":"219","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":13},{"ruleId":"193","severity":1,"message":"212","line":11,"column":14,"nodeType":"195","messageId":"196","endLine":11,"endColumn":18},{"ruleId":"193","severity":1,"message":"220","line":9,"column":17,"nodeType":"195","messageId":"196","endLine":9,"endColumn":29},{"ruleId":"193","severity":1,"message":"221","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":18},{"ruleId":"193","severity":1,"message":"222","line":1,"column":20,"nodeType":"195","messageId":"196","endLine":1,"endColumn":32},{"ruleId":"193","severity":1,"message":"211","line":10,"column":11,"nodeType":"195","messageId":"196","endLine":10,"endColumn":19},{"ruleId":"193","severity":1,"message":"212","line":10,"column":24,"nodeType":"195","messageId":"196","endLine":10,"endColumn":28},{"ruleId":"193","severity":1,"message":"213","line":11,"column":9,"nodeType":"195","messageId":"196","endLine":11,"endColumn":16},{"ruleId":"193","severity":1,"message":"223","line":12,"column":22,"nodeType":"195","messageId":"196","endLine":12,"endColumn":35},{"ruleId":"193","severity":1,"message":"212","line":44,"column":14,"nodeType":"195","messageId":"196","endLine":44,"endColumn":18},{"ruleId":"193","severity":1,"message":"213","line":45,"column":9,"nodeType":"195","messageId":"196","endLine":45,"endColumn":16},{"ruleId":"193","severity":1,"message":"224","line":55,"column":9,"nodeType":"195","messageId":"196","endLine":55,"endColumn":20},{"ruleId":"193","severity":1,"message":"219","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":7,"column":9,"nodeType":"227","messageId":"228","endLine":7,"endColumn":12,"suggestions":"229"},{"ruleId":"193","severity":1,"message":"212","line":11,"column":20,"nodeType":"195","messageId":"196","endLine":11,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":21,"column":23,"nodeType":"227","messageId":"228","endLine":21,"endColumn":26,"suggestions":"230"},{"ruleId":"225","severity":1,"message":"226","line":7,"column":9,"nodeType":"227","messageId":"228","endLine":7,"endColumn":12,"suggestions":"231"},{"ruleId":"193","severity":1,"message":"212","line":11,"column":20,"nodeType":"195","messageId":"196","endLine":11,"endColumn":24},{"ruleId":"193","severity":1,"message":"211","line":13,"column":11,"nodeType":"195","messageId":"196","endLine":13,"endColumn":19},{"ruleId":"193","severity":1,"message":"212","line":13,"column":24,"nodeType":"195","messageId":"196","endLine":13,"endColumn":28},{"ruleId":"193","severity":1,"message":"213","line":15,"column":9,"nodeType":"195","messageId":"196","endLine":15,"endColumn":16},{"ruleId":"225","severity":1,"message":"226","line":21,"column":18,"nodeType":"227","messageId":"228","endLine":21,"endColumn":21,"suggestions":"232"},{"ruleId":"193","severity":1,"message":"233","line":47,"column":23,"nodeType":"195","messageId":"196","endLine":47,"endColumn":28},{"ruleId":"193","severity":1,"message":"212","line":47,"column":37,"nodeType":"195","messageId":"196","endLine":47,"endColumn":41},"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'Button' is defined but never used.","'Chip' is defined but never used.","'Info' is defined but never used.","'LockOpen' is defined but never used.","'Card' is defined but never used.","'AvatarWrapper' is defined but never used.","'CoverPhoto' is defined but never used.","'Name' is defined but never used.","'Block' is defined but never used.","'Username' is defined but never used.","'Divider' is defined but never used.","'InterestTitle' is defined but never used.","'InterestContainer' is defined but never used.","'children' is assigned a value but never used.","'rest' is assigned a value but never used.","'classes' is assigned a value but never used.","'Container' is defined but never used.","'LinkText' is defined but never used.","'MEDIA_BREAK' is defined but never used.","'theme' is defined but never used.","'CenteredRow' is defined but never used.","'Obj' is defined but never used.","'props' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'setCategories' is assigned a value but never used.","'toggleFocus' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["234","235"],["236","237"],["238","239"],["240","241"],"'index' is assigned a value but never used.",{"messageId":"242","fix":"243","desc":"244"},{"messageId":"245","fix":"246","desc":"247"},{"messageId":"242","fix":"248","desc":"244"},{"messageId":"245","fix":"249","desc":"247"},{"messageId":"242","fix":"250","desc":"244"},{"messageId":"245","fix":"251","desc":"247"},{"messageId":"242","fix":"252","desc":"244"},{"messageId":"245","fix":"253","desc":"247"},"suggestUnknown",{"range":"254","text":"255"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"254","text":"256"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"257","text":"255"},{"range":"257","text":"256"},{"range":"258","text":"255"},{"range":"258","text":"256"},{"range":"259","text":"255"},{"range":"259","text":"256"},[237,240],"unknown","never",[628,631],[273,276],[464,467]]