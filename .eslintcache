[{"E:\\repositories\\csci3100-project\\src\\index.tsx":"1","E:\\repositories\\csci3100-project\\src\\hot-routes.tsx":"2","E:\\repositories\\csci3100-project\\src\\routes.tsx":"3","E:\\repositories\\csci3100-project\\src\\layout.tsx":"4","E:\\repositories\\csci3100-project\\src\\components\\navigation\\index.tsx":"5","E:\\repositories\\csci3100-project\\src\\components\\navigation\\style.tsx":"6","E:\\repositories\\csci3100-project\\src\\styling.tsx":"7","E:\\repositories\\csci3100-project\\src\\views\\appView\\index.tsx":"8","E:\\repositories\\csci3100-project\\src\\views\\mainView\\index.tsx":"9","E:\\repositories\\csci3100-project\\src\\views\\searchView\\index.tsx":"10","E:\\repositories\\csci3100-project\\src\\views\\profileView\\index.tsx":"11","E:\\repositories\\csci3100-project\\src\\views\\cartView\\index.tsx":"12","E:\\repositories\\csci3100-project\\src\\components\\searchBar\\index.tsx":"13","E:\\repositories\\csci3100-project\\src\\components\\footer\\index.tsx":"14","E:\\repositories\\csci3100-project\\src\\views\\mainView\\mainContent\\index.tsx":"15","E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\index.tsx":"16","E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\style.tsx":"17","E:\\repositories\\csci3100-project\\src\\components\\tooltip\\index.tsx":"18","E:\\repositories\\csci3100-project\\src\\views\\settingsView\\index.tsx":"19","E:\\repositories\\csci3100-project\\src\\components\\searchBar\\style.tsx":"20","E:\\repositories\\csci3100-project\\src\\views\\mainView\\mainHeader\\index.tsx":"21","E:\\repositories\\csci3100-project\\src\\views\\mainView\\mainHeader\\style.tsx":"22","E:\\repositories\\csci3100-project\\src\\views\\profileView\\style.tsx":"23","E:\\repositories\\csci3100-project\\src\\components\\dynamicCard\\index.tsx":"24","E:\\repositories\\csci3100-project\\src\\views\\loginView\\index.tsx":"25","E:\\repositories\\csci3100-project\\src\\views\\loginView\\style.tsx":"26","E:\\repositories\\csci3100-project\\src\\components\\dynamicCard\\style.tsx":"27","E:\\repositories\\csci3100-project\\src\\views\\loginView\\loginForm\\index.tsx":"28","E:\\repositories\\csci3100-project\\src\\views\\loginView\\signupForm\\index.tsx":"29","E:\\repositories\\csci3100-project\\src\\views\\loginView\\resetPwForm\\index.tsx":"30","E:\\repositories\\csci3100-project\\src\\formIntegrity.tsx":"31"},{"size":494,"mtime":1612641907876,"results":"32","hashOfConfig":"33"},{"size":160,"mtime":1610301564212,"results":"34","hashOfConfig":"33"},{"size":2357,"mtime":1615286348718,"results":"35","hashOfConfig":"33"},{"size":2361,"mtime":1615286265303,"results":"36","hashOfConfig":"33"},{"size":1972,"mtime":1614965028455,"results":"37","hashOfConfig":"33"},{"size":1353,"mtime":1615280639593,"results":"38","hashOfConfig":"33"},{"size":1211,"mtime":1615357313320,"results":"39","hashOfConfig":"33"},{"size":302,"mtime":1614800401494,"results":"40","hashOfConfig":"33"},{"size":478,"mtime":1615286444159,"results":"41","hashOfConfig":"33"},{"size":250,"mtime":1614964357115,"results":"42","hashOfConfig":"33"},{"size":535,"mtime":1615228202228,"results":"43","hashOfConfig":"33"},{"size":246,"mtime":1614964457138,"results":"44","hashOfConfig":"33"},{"size":1766,"mtime":1615224590873,"results":"45","hashOfConfig":"33"},{"size":282,"mtime":1614964522479,"results":"46","hashOfConfig":"33"},{"size":298,"mtime":1614964383168,"results":"47","hashOfConfig":"33"},{"size":963,"mtime":1614941461334,"results":"48","hashOfConfig":"33"},{"size":1431,"mtime":1615278110693,"results":"49","hashOfConfig":"33"},{"size":1236,"mtime":1614964468167,"results":"50","hashOfConfig":"33"},{"size":254,"mtime":1614964340897,"results":"51","hashOfConfig":"33"},{"size":420,"mtime":1615361164257,"results":"52","hashOfConfig":"33"},{"size":388,"mtime":1615361164946,"results":"53","hashOfConfig":"33"},{"size":509,"mtime":1615361165018,"results":"54","hashOfConfig":"33"},{"size":726,"mtime":1615361165109,"results":"55","hashOfConfig":"33"},{"size":517,"mtime":1615361163960,"results":"56","hashOfConfig":"33"},{"size":1037,"mtime":1615299563995,"results":"57","hashOfConfig":"33"},{"size":2070,"mtime":1615361164851,"results":"58","hashOfConfig":"33"},{"size":662,"mtime":1615361164020,"results":"59","hashOfConfig":"33"},{"size":2763,"mtime":1615363175095,"results":"60","hashOfConfig":"33"},{"size":3247,"mtime":1615363191208,"results":"61","hashOfConfig":"33"},{"size":1923,"mtime":1615361164681,"results":"62","hashOfConfig":"33"},{"size":1801,"mtime":1615361164312,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"glrecs",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},"E:\\repositories\\csci3100-project\\src\\index.tsx",[],[],"E:\\repositories\\csci3100-project\\src\\hot-routes.tsx",[],"E:\\repositories\\csci3100-project\\src\\routes.tsx",[],"E:\\repositories\\csci3100-project\\src\\layout.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\navigation\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\navigation\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\styling.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\appView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\mainView\\index.tsx",["137","138"],"import Footer from '@src/components/footer'\nimport { MainLayout } from '@src/layout'\nimport React, { ReactElement } from 'react'\nimport MainContent from './mainContent'\nimport MainHeader from './mainHeader'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst MainView = (props: Props): ReactElement => {\n  const { ...rest } = props\n  return (\n    <>\n      <MainHeader></MainHeader>\n      <MainContent></MainContent>\n      <Footer></Footer>\n    </>\n  )\n}\n\nexport default MainView\n","E:\\repositories\\csci3100-project\\src\\views\\searchView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\profileView\\index.tsx",["139","140","141"],"import DynamicCard from '@src/components/dynamicCard'\nimport React, { ReactElement } from 'react'\nimport { MainColumn, ProfileLayout, SecondaryColumn } from './style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst ProfileView = (props: Props): ReactElement => {\n  const { children, ...rest } = props\n  return (\n    <ProfileLayout>\n      <SecondaryColumn>{/* <DynamicCard></DynamicCard>\n        <DynamicCard></DynamicCard> */}</SecondaryColumn>\n      <MainColumn></MainColumn>\n    </ProfileLayout>\n  )\n}\n\nexport default ProfileView\n","E:\\repositories\\csci3100-project\\src\\views\\cartView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\searchBar\\index.tsx",["142","143","144","145"],"import { makeStyles } from '@material-ui/core'\nimport React, { ChangeEvent, ReactElement, useState } from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Input, SearchWrapper, Submit, Select } from './style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid white',\n  },\n  focusedForm: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid orange',\n  },\n  select: {\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}))\n\nconst SearchBar = (props: Props): ReactElement => {\n  const [input, setInput] = useState('')\n  const [scope, setScope] = useState('All')\n  const [isFocus, setIsFocus] = useState(false)\n  const { ...rest } = props\n  const classes = useStyles()\n\n  const handleScopeChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setScope(e.target.value)\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value)\n  }\n\n  const toggleFocus = () => {\n    setIsFocus(!isFocus)\n  }\n\n  return (\n    <SearchWrapper>\n      <Select name=\"scope\" value={scope} onChange={(e) => handleScopeChange(e as ChangeEvent<HTMLSelectElement>)}>\n        <option value=\"ALL\">All</option>\n        <option value=\"Name\">Name</option>\n        <option value=\"Author\">Author</option>\n      </Select>\n      <Input onChange={handleInputChange}></Input>\n      <Submit>\n        <SearchIcon></SearchIcon>\n      </Submit>\n    </SearchWrapper>\n  )\n}\n\nexport default SearchBar\n","E:\\repositories\\csci3100-project\\src\\components\\footer\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\mainView\\mainContent\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\navigation\\navItem\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\tooltip\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\settingsView\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\searchBar\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\mainView\\mainHeader\\index.tsx",["146"],"import SearchBar from '@src/components/searchBar'\nimport React, { ReactElement } from 'react'\nimport { HeaderContainer } from './style'\n\ntype Props = {\n  // children?: ReactElement\n}\n\nconst MainHeader = (props: Props): ReactElement => {\n  // const { children } = props\n  return (\n    <HeaderContainer>\n      <SearchBar></SearchBar>\n    </HeaderContainer>\n  )\n}\n\nexport default MainHeader\n","E:\\repositories\\csci3100-project\\src\\views\\mainView\\mainHeader\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\profileView\\style.tsx",[],"E:\\repositories\\csci3100-project\\src\\components\\dynamicCard\\index.tsx",["147","148"],"import { COLOR } from '@src/styling'\r\nimport React, { ReactElement } from 'react'\r\nimport { CardWrapper } from './style'\r\n\r\ntype Props = {\r\n  width?: number\r\n  height?: number\r\n  bgColor?: string\r\n  children: Array<ReactElement>\r\n}\r\n\r\nconst FixedCard = (props: Props): ReactElement => {\r\n  const { width, height, bgColor, children, ...rest } = props\r\n  return (\r\n    <CardWrapper width={width} height={height} color={bgColor}>\r\n      {children.map((child: ReactElement) => child)}\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nexport default FixedCard\r\n","E:\\repositories\\csci3100-project\\src\\views\\loginView\\index.tsx",["149","150","151"],"import { CenteredLayout } from '@src/layout'\nimport React, { ReactElement, useState } from 'react'\nimport LoginForm from './loginForm'\nimport ResetPwForm from './resetPwForm'\nimport SignupForm from './signupForm'\nimport { Container, Wrapper, LinkText } from './style'\n\ntype Props = {\n  children?: ReactElement\n}\n\nexport const LOGIN = 1\nexport const SIGNUP = 2\nexport const RESET_PW = 3\n\nconst LoginView = (props: Props): ReactElement => {\n  const { children } = props\n  const [operation, setOperation] = useState(LOGIN)\n\n  return (\n    <CenteredLayout>\n      {operation === LOGIN && (\n        <Wrapper>\n          <LoginForm setOperation={setOperation}></LoginForm>\n        </Wrapper>\n      )}\n      {operation === SIGNUP && (\n        <Wrapper>\n          <SignupForm setOperation={setOperation}></SignupForm>\n        </Wrapper>\n      )}\n      {operation === RESET_PW && (\n        <Wrapper>\n          <ResetPwForm setOperation={setOperation}></ResetPwForm>\n        </Wrapper>\n      )}\n    </CenteredLayout>\n  )\n}\n\nexport default LoginView\n","E:\\repositories\\csci3100-project\\src\\views\\loginView\\style.tsx",["152"],"import { makeStyles } from '@material-ui/core'\nimport { MEDIA_BREAK } from '@src/layout'\nimport { COLOR } from '@src/styling'\nimport styled, { keyframes } from 'styled-components'\n\nexport const useStyles = makeStyles((theme) => ({\n  textField: {\n    margin: '10px 0px 10px 0px',\n    width: 'fill-available',\n    '& .MuiOutlinedInput-root': {\n      '&.Mui-focused fieldset': {\n        borderColor: COLOR.primary.shade1,\n      },\n      '&.Mui-error fieldset': {\n        borderColor: COLOR.error.shade,\n      },\n    },\n  },\n  button: {\n    width: 'fill-available',\n    margin: '10px 0px 10px 0px',\n    background: COLOR.primary.shade1,\n    '&:hover': {\n      background: COLOR.primary.shade2,\n    },\n  },\n}))\n\nconst fadeIn = keyframes`\n  from {\n    margin-top:300px;\n    opacity: 0.1;\n  }\n\n  to {\n    margin-top:0px;\n    opacity: 1;\n  }\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  animation: ${fadeIn} 0.3s linear;\n`\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${COLOR.bg.light};\n  border: 1px solid ${COLOR.divider.dark};\n  padding: 35px;\n  margin: 10px 0px 10px 0px;\n  width: 100%;\n  @media (max-width: ${MEDIA_BREAK}px) {\n    padding: 15px;\n  }\n`\n\nexport const IconRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-size: 64px;\n  color: ${COLOR.primary.shade1};\n  width: 100%;\n`\nexport const Line = styled.div`\n  flex: 2;\n  height: 1px;\n  background: ${COLOR.divider.dark};\n`\n\nexport const CenteredRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin: 25px 0px 25px 0px;\n`\n\nexport const DividerText = styled.div`\n  color: ${COLOR.divider.dark};\n  margin: 0px 15px 0px 15px;\n`\nexport const LinkText = styled.div`\n  cursor: pointer;\n  font-weight: 600;\n  color: ${COLOR.primary.main};\n  &:hover {\n    color: ${COLOR.primary.shade2};\n  }\n`\n","E:\\repositories\\csci3100-project\\src\\components\\dynamicCard\\style.tsx",["153"],"import { MEDIA_BREAK, MAX_APP_COLUMN_WIDTH } from '@src/layout'\r\nimport { COLOR } from '@src/styling'\r\nimport styled from 'styled-components'\r\n\r\ntype Props = {\r\n  width?: number\r\n  height?: number\r\n  bgColor?: string\r\n}\r\n\r\nexport const CardWrapper = styled.div`\r\n  ${(props: Props) => `\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: ${props.width ? props.width + 'px' : 'fit-content'};\r\n  height: ${props.height ? props.height + 'px' : 'fit-content'};\r\n  background: ${props.bgColor ? props.bgColor : COLOR.bg.light};\r\n  border-radius: 4px;\r\n  border: 1px solid ${COLOR.divider.dark};\r\n  padding: 35px;\r\n  @media (max-width: ${MEDIA_BREAK}px) {\r\n    padding: 15px;\r\n  }\r\n`}\r\n`\r\n","E:\\repositories\\csci3100-project\\src\\views\\loginView\\loginForm\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\loginView\\signupForm\\index.tsx",[],"E:\\repositories\\csci3100-project\\src\\views\\loginView\\resetPwForm\\index.tsx",["154"],"import React, { ChangeEvent, Dispatch, ReactElement, SetStateAction, useState } from 'react'\nimport { AccountCircle } from '@material-ui/icons'\nimport { Button, TextField } from '@material-ui/core'\nimport { LOGIN } from '..'\nimport { Container, IconRow, Line, CenteredRow, LinkText, useStyles } from '../style'\nimport { checkIntegrity, VALIDATORS } from '@src/formIntegrity'\n\ntype Props = {\n  setOperation: Dispatch<SetStateAction<number>>\n}\n\nconst ResetPwForm = (props: Props): ReactElement => {\n  const { setOperation } = props\n  const classes = useStyles()\n  const [input, setInput] = useState({\n    email: { value: '', errMsg: '' },\n  })\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const nextState = input\n    nextState[e.target.name as keyof typeof input] = { value: e.target.value, errMsg: '' }\n    setInput({ ...nextState })\n  }\n\n  const handleSubmit = () => {\n    // integrity check\n    const email = checkIntegrity(input.email, [VALIDATORS.REQUIRED, VALIDATORS.EMAIL])\n    setInput({ ...input, email })\n  }\n\n  return (\n    <>\n      <Container>\n        <IconRow>\n          <Line></Line>\n          <AccountCircle fontSize=\"inherit\" color=\"inherit\"></AccountCircle>\n          <Line></Line>\n        </IconRow>\n        <TextField\n          id=\"email-input\"\n          name=\"email\"\n          label=\"Email\"\n          type=\"text\"\n          autoComplete=\"current-email\"\n          variant=\"outlined\"\n          className={classes.textField}\n          error={!!input.email.errMsg}\n          helperText={input.email.errMsg}\n          onChange={handleInputChange}\n        />\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmit}>\n          RESET PASSWORD\n        </Button>\n      </Container>\n      <Container>\n        <LinkText onClick={() => setOperation(LOGIN)}>Back to log in.</LinkText>\n      </Container>\n    </>\n  )\n}\n\nexport default ResetPwForm\n","E:\\repositories\\csci3100-project\\src\\formIntegrity.tsx",["155"],"import { Obj } from '@myTypes/Obj'\n\ntype Validator = {\n  id: number\n  errMsg: string\n  check: (target: string) => boolean\n}\n\ntype Target = {\n  value: string\n  errMsg: string\n}\n\nconst REQUIRED: Validator = {\n  id: 1,\n  errMsg: 'This field cannot be empty.',\n  check: (target: string): boolean => {\n    return target.length !== 0\n  },\n}\n\nconst EMAIL: Validator = {\n  id: 2,\n  errMsg: 'Please enter a valid email.',\n  check: (target: string): boolean => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return regex.test(String(target).toLowerCase())\n  },\n}\n\nconst NUM_AND_LETTER: Validator = {\n  id: 3,\n  errMsg: 'Mixture of number and letter is required.',\n  check: (target: string): boolean => {\n    const regex = /^[0-9a-zA-Z]+$/\n    return regex.test(target)\n  },\n}\n\nconst SPECIAL_CHAR: Validator = {\n  id: 4,\n  errMsg: 'Inclusion of special character, e.g. ! @ # ? ] is required.',\n  check: (target: string): boolean => {\n    const regex = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n    return regex.test(target)\n  },\n}\nconst LENGTH_EIGHT: Validator = {\n  id: 5,\n  errMsg: 'At least 8 characters required.',\n  check: (target: string): boolean => {\n    return target.length > 7\n  },\n}\n\n// check whether the target passes the integrity test\n// @return original Target if passes all validators\n// @return modified errMsg if fails 1 validator\nexport const checkIntegrity = (target: Target, validators: Array<Validator>): Target => {\n  validators.some((validator) => {\n    if (!validator.check(target.value)) return (target.errMsg = validator.errMsg)\n  })\n  return target\n}\n\nexport const VALIDATORS = {\n  REQUIRED,\n  EMAIL,\n  NUM_AND_LETTER,\n  SPECIAL_CHAR,\n  LENGTH_EIGHT,\n}\n",{"ruleId":"156","severity":1,"message":"157","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":20},{"ruleId":"156","severity":1,"message":"160","line":12,"column":14,"nodeType":"158","messageId":"159","endLine":12,"endColumn":18},{"ruleId":"156","severity":1,"message":"161","line":1,"column":8,"nodeType":"158","messageId":"159","endLine":1,"endColumn":19},{"ruleId":"156","severity":1,"message":"162","line":10,"column":11,"nodeType":"158","messageId":"159","endLine":10,"endColumn":19},{"ruleId":"156","severity":1,"message":"160","line":10,"column":24,"nodeType":"158","messageId":"159","endLine":10,"endColumn":28},{"ruleId":"156","severity":1,"message":"163","line":41,"column":10,"nodeType":"158","messageId":"159","endLine":41,"endColumn":15},{"ruleId":"156","severity":1,"message":"160","line":44,"column":14,"nodeType":"158","messageId":"159","endLine":44,"endColumn":18},{"ruleId":"156","severity":1,"message":"164","line":45,"column":9,"nodeType":"158","messageId":"159","endLine":45,"endColumn":16},{"ruleId":"156","severity":1,"message":"165","line":55,"column":9,"nodeType":"158","messageId":"159","endLine":55,"endColumn":20},{"ruleId":"156","severity":1,"message":"166","line":9,"column":21,"nodeType":"158","messageId":"159","endLine":9,"endColumn":33},{"ruleId":"156","severity":1,"message":"167","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":15},{"ruleId":"156","severity":1,"message":"160","line":13,"column":48,"nodeType":"158","messageId":"159","endLine":13,"endColumn":52},{"ruleId":"156","severity":1,"message":"168","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":19},{"ruleId":"156","severity":1,"message":"169","line":6,"column":30,"nodeType":"158","messageId":"159","endLine":6,"endColumn":38},{"ruleId":"156","severity":1,"message":"162","line":17,"column":11,"nodeType":"158","messageId":"159","endLine":17,"endColumn":19},{"ruleId":"156","severity":1,"message":"170","line":6,"column":38,"nodeType":"158","messageId":"159","endLine":6,"endColumn":43},{"ruleId":"156","severity":1,"message":"171","line":1,"column":23,"nodeType":"158","messageId":"159","endLine":1,"endColumn":43},{"ruleId":"156","severity":1,"message":"172","line":5,"column":36,"nodeType":"158","messageId":"159","endLine":5,"endColumn":47},{"ruleId":"156","severity":1,"message":"173","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'MainLayout' is defined but never used.","Identifier","unusedVar","'rest' is assigned a value but never used.","'DynamicCard' is defined but never used.","'children' is assigned a value but never used.","'input' is assigned a value but never used.","'classes' is assigned a value but never used.","'toggleFocus' is assigned a value but never used.","'props' is defined but never used.","'COLOR' is defined but never used.","'Container' is defined but never used.","'LinkText' is defined but never used.","'theme' is defined but never used.","'MAX_APP_COLUMN_WIDTH' is defined but never used.","'CenteredRow' is defined but never used.","'Obj' is defined but never used."]